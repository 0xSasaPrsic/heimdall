// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: staking/v1beta/genesis.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/maticnetwork/heimdall/types"
	github_com_maticnetwork_heimdall_types_common "github.com/maticnetwork/heimdall/types/common"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GenesisState defines the staking module's genesis state.
type GenesisState struct {
	Validators       []*types.Validator  `protobuf:"bytes,1,rep,name=validators,proto3" json:"validators,omitempty"`
	CurrentValSet    *types.ValidatorSet `protobuf:"bytes,2,opt,name=current_val_set,json=currentValSet,proto3" json:"current_val_set,omitempty"`
	StakingSequences []string            `protobuf:"bytes,3,rep,name=staking_sequences,json=stakingSequences,proto3" json:"staking_sequences,omitempty"`
}

func (m *GenesisState) Reset()         { *m = GenesisState{} }
func (m *GenesisState) String() string { return proto.CompactTextString(m) }
func (*GenesisState) ProtoMessage()    {}
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_5668a8fd9722a3ab, []int{0}
}
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenesisState.Unmarshal(m, b)
}
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
}
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}
func (m *GenesisState) XXX_Size() int {
	return xxx_messageInfo_GenesisState.Size(m)
}
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState proto.InternalMessageInfo

func (m *GenesisState) GetValidators() []*types.Validator {
	if m != nil {
		return m.Validators
	}
	return nil
}

func (m *GenesisState) GetCurrentValSet() *types.ValidatorSet {
	if m != nil {
		return m.CurrentValSet
	}
	return nil
}

func (m *GenesisState) GetStakingSequences() []string {
	if m != nil {
		return m.StakingSequences
	}
	return nil
}

// GenesisValidator genesis validator
type GenesisValidator struct {
	ID         types.ValidatorID                                             `protobuf:"varint,1,opt,name=ID,proto3,enum=heimdall.types.ValidatorID" json:"ID,omitempty"`
	StartEpoch uint64                                                        `protobuf:"varint,2,opt,name=start_epoch,json=startEpoch,proto3" json:"start_epoch,omitempty"`
	EndEpoch   uint64                                                        `protobuf:"varint,3,opt,name=end_epoch,json=endEpoch,proto3" json:"end_epoch,omitempty"`
	Nonce      uint64                                                        `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Power      uint64                                                        `protobuf:"varint,5,opt,name=power,proto3" json:"power,omitempty"`
	PubKey     github_com_maticnetwork_heimdall_types_common.PubKey          `protobuf:"bytes,6,opt,name=pub_key,json=pubKey,proto3,casttype=github.com/maticnetwork/heimdall/types/common.PubKey" json:"pub_key,omitempty"`
	Signer     github_com_maticnetwork_heimdall_types_common.HeimdallAddress `protobuf:"bytes,7,opt,name=signer,proto3,casttype=github.com/maticnetwork/heimdall/types/common.HeimdallAddress" json:"signer,omitempty"`
}

func (m *GenesisValidator) Reset()         { *m = GenesisValidator{} }
func (m *GenesisValidator) String() string { return proto.CompactTextString(m) }
func (*GenesisValidator) ProtoMessage()    {}
func (*GenesisValidator) Descriptor() ([]byte, []int) {
	return fileDescriptor_5668a8fd9722a3ab, []int{1}
}
func (m *GenesisValidator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenesisValidator.Unmarshal(m, b)
}
func (m *GenesisValidator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenesisValidator.Marshal(b, m, deterministic)
}
func (m *GenesisValidator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisValidator.Merge(m, src)
}
func (m *GenesisValidator) XXX_Size() int {
	return xxx_messageInfo_GenesisValidator.Size(m)
}
func (m *GenesisValidator) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisValidator.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisValidator proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GenesisState)(nil), "heimdall.staking.v1beta1.GenesisState")
	proto.RegisterType((*GenesisValidator)(nil), "heimdall.staking.v1beta1.GenesisValidator")
}

func init() { proto.RegisterFile("staking/v1beta/genesis.proto", fileDescriptor_5668a8fd9722a3ab) }

var fileDescriptor_5668a8fd9722a3ab = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcf, 0x6e, 0xd3, 0x30,
	0x18, 0x4f, 0xda, 0xae, 0x63, 0xee, 0x80, 0x61, 0xed, 0x60, 0xb6, 0x29, 0x8d, 0x76, 0x8a, 0x34,
	0x29, 0x61, 0x85, 0x03, 0x20, 0x71, 0xd8, 0x54, 0x04, 0x85, 0x0b, 0xa4, 0xd2, 0x24, 0xb8, 0x44,
	0x4e, 0xf2, 0x29, 0x8d, 0x9a, 0xd8, 0xc1, 0x76, 0x3a, 0xfa, 0x06, 0x1c, 0x79, 0x04, 0x1e, 0x84,
	0x07, 0xe0, 0xb8, 0x23, 0x17, 0x26, 0xd4, 0xbe, 0xc5, 0x4e, 0xa8, 0x4e, 0x52, 0x21, 0xa4, 0x0a,
	0xed, 0x14, 0xfb, 0xf7, 0xf7, 0x8b, 0xfc, 0xa1, 0x23, 0xa9, 0xe8, 0x34, 0x65, 0x89, 0x37, 0x3b,
	0x0d, 0x41, 0x51, 0x2f, 0x01, 0x06, 0x32, 0x95, 0x6e, 0x21, 0xb8, 0xe2, 0x98, 0x4c, 0x20, 0xcd,
	0x63, 0x9a, 0x65, 0x6e, 0x2d, 0x73, 0x2b, 0xd9, 0xe9, 0x81, 0xd5, 0x30, 0x9e, 0x9a, 0x17, 0x20,
	0xbd, 0x19, 0xcd, 0xd2, 0x98, 0x2a, 0x2e, 0x2a, 0xe7, 0xc1, 0x7e, 0xc2, 0x13, 0xae, 0x8f, 0xde,
	0xea, 0x54, 0xa1, 0xc7, 0xdf, 0x4d, 0xb4, 0xfb, 0xaa, 0x6a, 0x18, 0x2b, 0xaa, 0x00, 0x3f, 0x43,
	0x68, 0xed, 0x94, 0xc4, 0xb4, 0xdb, 0x4e, 0x6f, 0xf0, 0xd0, 0x5d, 0xb7, 0xea, 0x6c, 0xf7, 0xa2,
	0x51, 0xf8, 0x7f, 0x89, 0xf1, 0x10, 0xdd, 0x8f, 0x4a, 0x21, 0x80, 0xa9, 0x60, 0x46, 0xb3, 0x40,
	0x82, 0x22, 0x2d, 0xdb, 0x74, 0x7a, 0x83, 0xa3, 0x8d, 0xfe, 0x31, 0x28, 0xff, 0x6e, 0x6d, 0xba,
	0xa0, 0xd9, 0x18, 0x14, 0x3e, 0x41, 0x0f, 0xea, 0x5f, 0x0b, 0x24, 0x7c, 0x2a, 0x81, 0x45, 0x20,
	0x49, 0xdb, 0x6e, 0x3b, 0x3b, 0xfe, 0x5e, 0x4d, 0x8c, 0x1b, 0xfc, 0xf8, 0x57, 0x0b, 0xed, 0xd5,
	0xe3, 0xaf, 0x33, 0xf1, 0x09, 0x6a, 0x8d, 0x86, 0xc4, 0xb4, 0x4d, 0xe7, 0xde, 0xe0, 0x70, 0x63,
	0xf5, 0x68, 0xe8, 0xb7, 0x46, 0x43, 0xdc, 0x47, 0x3d, 0xa9, 0xa8, 0x50, 0x01, 0x14, 0x3c, 0x9a,
	0xe8, 0x81, 0x3b, 0x3e, 0xd2, 0xd0, 0xcb, 0x15, 0x82, 0x0f, 0xd1, 0x0e, 0xb0, 0xb8, 0xa6, 0xdb,
	0x9a, 0xbe, 0x03, 0x2c, 0xae, 0xc8, 0x7d, 0xb4, 0xc5, 0x38, 0x8b, 0x80, 0x74, 0x34, 0x51, 0x5d,
	0x56, 0x68, 0xc1, 0x2f, 0x41, 0x90, 0xad, 0x0a, 0xd5, 0x17, 0xfc, 0x1e, 0x6d, 0x17, 0x65, 0x18,
	0x4c, 0x61, 0x4e, 0xba, 0xb6, 0xe9, 0xec, 0x9e, 0x3f, 0xbd, 0xb9, 0xee, 0x3f, 0x49, 0x52, 0x35,
	0x29, 0x43, 0x37, 0xe2, 0xb9, 0x97, 0x53, 0x95, 0x46, 0x0c, 0xd4, 0x25, 0x17, 0x53, 0xef, 0x9f,
	0xd7, 0x8c, 0x78, 0x9e, 0x73, 0xe6, 0xbe, 0x2b, 0xc3, 0xb7, 0x30, 0xf7, 0xbb, 0x85, 0xfe, 0xe2,
	0x0f, 0xa8, 0x2b, 0xd3, 0x84, 0x81, 0x20, 0xdb, 0x3a, 0xf1, 0xec, 0xe6, 0xba, 0xff, 0xe2, 0x76,
	0x89, 0xaf, 0x6b, 0xf4, 0x2c, 0x8e, 0x05, 0x48, 0xe9, 0xd7, 0x81, 0xcf, 0x3b, 0x5f, 0xbe, 0xf5,
	0x8d, 0xf3, 0x37, 0x3f, 0x16, 0x96, 0x71, 0xb5, 0xb0, 0x8c, 0xdf, 0x0b, 0xcb, 0xf8, 0xba, 0xb4,
	0x8c, 0xab, 0xa5, 0x65, 0xfc, 0x5c, 0x5a, 0xc6, 0xc7, 0x47, 0xff, 0xad, 0xf9, 0xec, 0x35, 0x9b,
	0xac, 0x0b, 0xc3, 0xae, 0xde, 0xb8, 0xc7, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x00, 0xba, 0x17,
	0x05, 0xe1, 0x02, 0x00, 0x00,
}
