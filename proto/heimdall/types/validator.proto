syntax = "proto3";

package heimdall.types;

import "gogoproto/gogo.proto";

option go_package = "github.com/maticnetwork/heimdall/types";

message ValidatorSet {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer)        = false;
  repeated Validator         validators = 1 ;
  Validator                  proposer = 2;
  int64                      total_voting_power = 3;
}


message Validator {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer)        = false;
  ValidatorID                 ID                = 1;
  uint64                      start_epoch       = 2;
  uint64                      end_epoch         = 3;
  uint64                      nonce             = 4;
  int64                       voting_power      = 5;
  string                      last_updated      = 6;
  bool                        Jailed            = 7;
  int64                       proposer_priority = 8;
  bytes                       pubKey = 9;
  bytes                       signer = 10;

}


enum ValidatorID {
  DEFAULT = 0;
  option (gogoproto.goproto_enum_stringer) = false;
  option (gogoproto.goproto_enum_prefix)   = false;
}


message MinimalVal {
  ValidatorID                 id                = 1;
  int64                       voting_power      = 2;
  // HeimdallAddress             Signer            = 3;
}
