syntax = "proto3";
package heimdall.params.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "heimdall/params/v1beta1/params.proto";

option go_package = "github.com/maticnetwork/heimdall/x/params/types/proposal";

// Query defines the gRPC querier service.
service Query {
    // Params queries a specific parameter of a module, given its subspace and
    // key.
    rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
        option (google.api.http).get = "/heimdall/params/v1beta1/params";
    }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {
    // subspace defines the module to query the parameter for.
    string subspace = 1;

    // key defines the key of the parameter in the subspace.
    string key = 2;
}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
    // param defines the queried parameter.
    ParamChange param = 1 [(gogoproto.nullable) = false];
}
