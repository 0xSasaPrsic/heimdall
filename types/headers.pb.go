// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: heimdall/types/headers.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_maticnetwork_heimdall_types_common "github.com/maticnetwork/heimdall/types/common"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Checkpoint struct {
	Proposer   github_com_maticnetwork_heimdall_types_common.HeimdallAddress `protobuf:"bytes,1,opt,name=proposer,proto3,casttype=github.com/maticnetwork/heimdall/types/common.HeimdallAddress" json:"proposer,omitempty"`
	StartBlock uint64                                                        `protobuf:"varint,2,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"`
	EndBlock   uint64                                                        `protobuf:"varint,3,opt,name=end_block,json=endBlock,proto3" json:"end_block,omitempty"`
	RootHash   github_com_maticnetwork_heimdall_types_common.HeimdallHash    `protobuf:"bytes,4,opt,name=root_hash,json=rootHash,proto3,casttype=github.com/maticnetwork/heimdall/types/common.HeimdallHash" json:"root_hash,omitempty"`
	BorChainID string                                                        `protobuf:"bytes,5,opt,name=borChainID,proto3" json:"borChainID,omitempty"`
	TimeStamp  uint64                                                        `protobuf:"varint,6,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
}

func (m *Checkpoint) Reset()      { *m = Checkpoint{} }
func (*Checkpoint) ProtoMessage() {}
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7e74cbd87a76f33, []int{0}
}
func (m *Checkpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Checkpoint.Unmarshal(m, b)
}
func (m *Checkpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Checkpoint.Marshal(b, m, deterministic)
}
func (m *Checkpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Checkpoint.Merge(m, src)
}
func (m *Checkpoint) XXX_Size() int {
	return xxx_messageInfo_Checkpoint.Size(m)
}
func (m *Checkpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Checkpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Checkpoint proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Checkpoint)(nil), "heimdall.types.Checkpoint")
}

func init() { proto.RegisterFile("heimdall/types/headers.proto", fileDescriptor_c7e74cbd87a76f33) }

var fileDescriptor_c7e74cbd87a76f33 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x3f, 0x4b, 0xfb, 0x40,
	0x1c, 0x87, 0x2f, 0xfd, 0xf5, 0x57, 0x92, 0x53, 0x1c, 0x82, 0x43, 0xf0, 0xcf, 0xa5, 0x38, 0x48,
	0xa7, 0x64, 0x70, 0x2b, 0x28, 0xb6, 0x75, 0xa8, 0x6b, 0xdc, 0x14, 0x29, 0x97, 0xe4, 0xe8, 0x85,
	0xf6, 0xf2, 0x0d, 0x77, 0x27, 0xe2, 0x3b, 0x70, 0x74, 0x74, 0xec, 0xcb, 0x71, 0xb3, 0xa3, 0x53,
	0x91, 0xe6, 0x5d, 0x74, 0x92, 0xbb, 0x56, 0x11, 0x27, 0x71, 0xfb, 0xf2, 0x3c, 0xc7, 0x87, 0x07,
	0x0e, 0x1f, 0x70, 0x56, 0x88, 0x9c, 0x4e, 0xa7, 0xb1, 0x7e, 0xa8, 0x98, 0x8a, 0x39, 0xa3, 0x39,
	0x93, 0x2a, 0xaa, 0x24, 0x68, 0xf0, 0x77, 0x3e, 0x6d, 0x64, 0xed, 0xde, 0xee, 0x18, 0xc6, 0x60,
	0x55, 0x6c, 0xae, 0xf5, 0xab, 0xa3, 0xd7, 0x06, 0xc6, 0x03, 0xce, 0xb2, 0x49, 0x05, 0x45, 0xa9,
	0xfd, 0x5b, 0xec, 0x56, 0x12, 0x2a, 0x50, 0x4c, 0x06, 0x4e, 0xdb, 0xe9, 0x6c, 0xf7, 0x7b, 0xab,
	0x45, 0x78, 0x3a, 0x2e, 0x34, 0xbf, 0x4b, 0xa3, 0x0c, 0x44, 0x2c, 0xa8, 0x2e, 0xb2, 0x92, 0xe9,
	0x7b, 0x90, 0x93, 0xf8, 0x47, 0x40, 0x06, 0x42, 0x40, 0x19, 0x0d, 0x37, 0xb4, 0x97, 0xe7, 0x92,
	0x29, 0x95, 0x7c, 0x4d, 0xfa, 0x21, 0xde, 0x52, 0x9a, 0x4a, 0x3d, 0x4a, 0xa7, 0x90, 0x4d, 0x82,
	0x46, 0xdb, 0xe9, 0x34, 0x13, 0x6c, 0x51, 0xdf, 0x10, 0x7f, 0x1f, 0x7b, 0xac, 0xcc, 0x37, 0xfa,
	0x9f, 0xd5, 0x2e, 0x2b, 0xf3, 0xb5, 0xbc, 0xc1, 0x9e, 0x04, 0xd0, 0x23, 0x4e, 0x15, 0x0f, 0x9a,
	0xb6, 0xee, 0x6c, 0xb5, 0x08, 0xbb, 0x7f, 0xab, 0x1b, 0x52, 0xc5, 0x13, 0xd7, 0x0c, 0x9a, 0xcb,
	0x27, 0x18, 0xa7, 0x20, 0x07, 0x9c, 0x16, 0xe5, 0xe5, 0x45, 0xf0, 0xbf, 0xed, 0x74, 0xbc, 0xe4,
	0x1b, 0xf1, 0x0f, 0x31, 0xd6, 0x85, 0x60, 0x23, 0xa5, 0xa9, 0xa8, 0x82, 0x96, 0x4d, 0xf3, 0x0c,
	0xb9, 0x32, 0xa0, 0xeb, 0x3e, 0xce, 0x42, 0xf4, 0x3c, 0x0b, 0x51, 0xff, 0xfc, 0x65, 0x49, 0xd0,
	0x7c, 0x49, 0xd0, 0xfb, 0x92, 0xa0, 0xa7, 0x9a, 0xa0, 0x79, 0x4d, 0xd0, 0x5b, 0x4d, 0xd0, 0xf5,
	0xf1, 0xef, 0x42, 0xd3, 0x96, 0xfd, 0x9a, 0x93, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb7, 0xf6,
	0xdf, 0xaa, 0xe0, 0x01, 0x00, 0x00,
}
